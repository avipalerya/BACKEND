1. Explain the Examples for looping stmnts?
--->
Looping in a programming language is a way to execute a statement or a set of statements 
multiple times depending on the result of the condition to be evaluated to execute 
statements. The result condition should be true to execute statements within loops.

1. while loop The test condition is given in the beginning of the loop and all statements 
are executed till the given boolean condition satisfies when the condition becomes false, 
the control will be out from the while loop.

2. for loop
for loop has similar functionality as the while loop but with different syntax. for loops are 
preferred when the number of times loop statements are to be executed is known beforehand. 
The loop variable initialization, condition to be tested, and increment/decrement of 
the loop variable is done in one line

3. do-while loop
do while loop is similar to while loop with the only difference that it checks the condition 
after executing the statements, i.e it will execute the loop body one time for sure because 
it checks the condition after executing the statements.
---------------------------------------------------------------------------------------------

2. Explain jagged array example?
--->
---------------------------------------------------------------------------------------------
3. Diff bn Out and Ref parameter?
--->
What is Ref Keyword in C#?
Ref is a keyword that we use for passing the available arguments by their references.

What is Out Keyword in C#?
Out is a keyword that we use to pass the available arguments to the methods as a type of reference. 
We generally use this keyword when any method returns various different values.
	
1) Purpose of Keyword:	
We use the ref keyword when a called parameter needs to update the parameter (passed).	
We use the out keyword when a called method needs to update multiple parameters (passed).

2) Direction:	
We use ref keyword for passing data in a bi-directional manner.	
We use out keyword for getting data in a unidirectional manner.

3) Need to Initialize:	
We need to initialize a variable before passing it as a ref. The compiler will throw an error if we don’t do this step.	
We don’t need to initialize (only declaration )any given variable in case we use an out keyword.

4) Initialization:	
In ref, we need to initialize any passed parameter in the form of ref.	
In out, we need to initialize any passed parameter in the form of out.
------------------------------------------------------------------------------------------------
4. Diff bn break and continue stmnts?
---> 
https://www.c-sharpcorner.com/blogs/difference-between-break-statement-and-continue-statement-in-c-sharp1

Using break statement,you can 'jump out of a loop' whereas by using continue statement, you can 'jump over one iteration' and then resume your loop execution.
-------------------------------------------------------------------------------------------------

5. list the diff types of comments in c#
--->
Comments are used for explaining the code and are used in a similar manner as in Java, C or C++. 
Compilers ignore the comment entries and do not execute them. Generally, programming languages contain two types of comments but in C#, there are 3 Types of comments :

* Single Line Comments : It is used to comment a single line. These comment can be written in a separate line or along with the codes in the same line. But for better understanding always use the comment in a separate line.
Syntax: 
// Single Line Comments

* Multiline Comments : It is used to comment more than one line. Generally this is used to comment out an entire block of code statements.
Syntax :
/* Multiline
Comment */

*XML Documentation Comments : It is a special type of comment in C# and used to create the documentation of C# code by adding XML elements in the source code. XML elements are added in XML Documentation Comments of C#.
Syntax :
/// <summary>
/// This class does something of program Summary.
/// </summary>
-----------------------------------------------------------------------------------------------------
6. Exp the 4 steps involved  in c# code compilation
--->
c-sharpcorner.com/UploadFile/a8024d/C-Sharp-program-compliation-steps/

C# Program compilation steps are as follows.

* Compiling Source Code into Managed Module.
* Combining newly created managed module into the assembly / assemblies.
* Loading the CLR.
* Executing the assembly in & by CRL.
----------------------------------------------------------------------------------------------------

7. Discuss the various methods to pass parameters in a method
--->
There are four different ways of passing parameters to a method in C# which are as:
*Value
*Ref (reference)
*Out (reference)
*Params (parameter arrays)
-----------------------------------------------------------------------------------------------------

8. Name all c# access modifiers?
--->
"Access Modifiers are keywords in C# which are used to restrict avaibility of object,method,class and its members into the program or in application".

We can control the scope of the member object of a class using access specifiers which are used to  provide security of applications.

their are following types of access modifiers in C# 

1) Public
2) Private
3) Protected 
4) Internal
5) Protected internal


1) Public:
Public is the most commonaly used access specifier in C# . 
It can be access from anywhere, that means there is no restriction on accessibility. 
The scope of the accessibility is inside class as well as outside. 
The type or member can be accessed by any other code in the same assembly or another assembly that references it.

some key points 

>the members of public access specifier can be accessed
>within  the class in which they are declared.
>within  the derived classes of that class available within the same assembly.
>Outside the class within the same assembly.
>within  the derived classes of that class available outside the assembly.
>Outside the class outside the assembly. 

2) Private:
The scope of the accessibility is limited only inside the classes or struct in which they are declared. 
The private members cannot be accessed outside the class and it is the least permissive access level.

some key points 

>the members of Private access specifier can be accessed
>Only Within the class in which they are declared.

3) Protected:
The scope of accessibility is limited within the class or struct and the class derived from this class.

some key points 

>the members of Protected access specifier can be accessed
>within the class in which they are declared.
>within  the derived classes of that class available within the same assembly.
>within  the derived classes of that class available outside the assembly.

4) Internal: 
The internal access modifiers can access within the program that contain its declarations and also access within the same assembly level but not from another assembly.

some key points 

>the members of Internal access specifier can be accessed
>within  the class in which they are declared.
>within  the derived classes of that class available within the same assembly.
>Outside the class within the same assembly.

5) Protected Internal:
Protected internal is the same access levels of both protected and internal. 
It can access anywhere in the same assembly and in the same class also the classes inherited from the same class .

some key points 

>the members of protected Internal access specifier can be accessed
>Within the class in which they are declared.
>Within the derived classes of that class available within the same assembly.
>Outside the class within the same assembly.
>Within the derived classes of that class available outside the assembly.

#Note:

>Namespace will not have access modifier.
>Default access modifier for class ,struct, Interface, Enum, Delegate is Internal.
>Default access modifier for class and struct members is private.
>No access modifier can be applied to interface members and always interface members are public.
>Enum members are always public and no access modifier can be applied


-----------------------------------------------------------------------------------------------------

9. Mention all advantages of c#?
--->
C# is a modern, general-purpose, object-oriented programming language developed by Microsoft and approved by European Computer Manufacturers Association (ECMA) and International Standards Organization (ISO).

C# is designed for Common Language Infrastructure (CLI), which consists of the executable code and runtime environment that allows the use of various high-level languages on different computer platforms and architectures.

Advantages of C#
Object-Oriented Language
Automatic Garbage Collection
Cross Platform
Backward Compatibility
Better Integrity and Interoperability

---------------------------------------
Applications of C#
Games using Unity
Web Applications Client-Server Applications
Windows Applications Applications that run on desktops
Web Services Applications
Console Applications
Class Libraries



6.Exp the 4 steps involved  in c# code compilation
======================================================
Compilation process in C involves four steps: pre-processing, compiling, assembling, and linking. 

The preprocessor tool helps in comments removal, macros expansion, file inclusion, and conditional compilation. 

These commands are executed in the first step of the compilation process.


7. Discuss the various methods to pass parameters in a method
==============================================================
There are four different ways of passing parameters to a method in C# which are as:
Value.
Ref (reference)
Out (reference)
Params (parameter arrays)


Passing parameter by value
---------------------------
By default, parameters are passed by value. 

In this method a duplicate copy is made and sent to the called function. There are two copies of the variables. 

So if you change the value in the called method it won't be changed in the calling method.


Passing parameter by ref
---------------------------------
Passing parameters by ref uses the address of the actual parameters to the formal parameters. 

It requires ref keyword in front of variables to identify in both actual and formal parameters.

The process of ref is bidirectional i.e. we have to supply value to the formal parameters and we get back processed value.

We use this process when we want to use or change the values of the parameters passed.



ref	                                                                                                                                                out
ref is a mechanism of parameter passing by reference	                                                                  Out is also a mechanism of parameter passing by reference
A variable to be sent as ref parameter must be initialized.	                                                            A variable to be sent as out parameter don't need to be initialized
ref is bidirectional i.e. we have to supply value to the formal parameters and we get back processed value.       	Out is a unidirectional i.e. we don't supply any value but we get back processed value.



C# Access modifiers or specifiers are the keywords that are used to specify accessibility or scope of variables and functions in the C# application.

C# provides five types of access specifiers.

1.Public

2.Protected

3.Internal

4.Protected internal

5.Private

We can choose any of these to protect our data. 
Public is not restricted and Private is most restricted.

Access Specifier	                                  Description

Public	                                    It specifies that access is not restricted.
Protected	                                    It specifies that access is limited to the containing class or in derived class.
Internal	                                    It specifies that access is limited to the current assembly.
protected internal	                        It specifies that access is limited to the current assembly or types derived from the containing class.
Private	                                    It specifies that access is limited to the containing type.


What are advantages of C# language?
===========================================
Benefits of Using C#:=

Faster development time.---- C# has several features that allow developers to code faster than with other languages. ...
High scalability.---- The static coding nature of C# turns all its programs into reliable products that can be easily tweaked and changed. ...
Object-oriented. 
Gentle learning curve.
Big community.


10. What is Abstract Class
==============================

Abstract class: is a restricted class that cannot be used to create objects (to access it, it must be inherited from another class). 

Abstract method: can only be used in an abstract class, and it does not have a body. 

The body is provided by the derived class (inherited from).