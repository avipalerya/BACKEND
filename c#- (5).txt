1. Write Pgm in c# to find the sum of first 10 natural nos.
2. Write pgm to read 10 nos. From keyboard  and find sum and avg of those nos.
3. Write a pgm to find cube of a given number.
4. Write a pgm to display a pattern of right angled triangle in *.
5. when we can create a static methods inside instance class  why cant we create instance methods in static class?
6. How to access private data members and private member functions outside the class.
7. Define method overloading with example?
8. How do you check a number is Armstrong number or not ?
9. What are the diff approaches to passing  parameters in c# 
10. What are the diff classes collections in c#?

-----------------------------------------------------------------------------------------------------------------------------------------
5.Static methods don't get instantiated Non-static methods are not instantiated as well. Class instances contain only data. Methods are just called (not instantiated). 
The difference is that non-static methods are called with class instance, and static methods without class instance.

-------------------------------------------------------------------------------------------------------------------------------------------
7.two or more methods in a class with the same name but different numbers, types, and order of parameters, it is called method overloading

--------------------------------------------------------------------------------------------------------------------------------------------
9.We covered all about C# Methods in our previous tutorial. In this tutorial we will learn about how to pass parameters to a method. There are three ways to pass parameters to a method.

Pass by Value

Pass by Reference

Pass by Output

1. Pass by Value
Passing parameters to a method by value is simple. When a simple variable is passed as a parameter to any method, it is passed as a value.

2. Pass by Reference
The ref keyword indicates a value that is passed by reference. When we pass parameters by reference, unlike passing parameters by value, a new storage location is not created for these parameters. The reference parameters represent the same memory location as the actual parameters that are supplied to the method.

In simpler words, when we pass a reference of a variable to a method, then we pass the address or the memory location where the value is stored. So if, inside the method,
 the value of the parameter is changed, then the actual value stored at the memory location gets changed as no copy is getting created for the value passed as parameter.

3. Pass by Output
The out keyword indicates a value that is passed by reference type. It is pretty similar to the ref keyword, the only difference is that out doesn't require a variable to be initialized before we pass it as an argument to the method. 
However, the called method is required to assign a value to the passed reference before the method returns.

-----------------------------------------------------------------------------------------------------------------------------------------------
10.The classes in the System.Collections namespace do not store elements as specifically typed objects, but as objects of type Object.

Whenever possible, you should use the generic collections in the System.Collections.Generic namespace or the System.Collections.Concurrent namespace instead of the legacy types in the System.Collections namespace.

The following table lists some of the frequently used classes in the System.Collections namespace:

Class         	Description
ArrayList	Represents an array of objects whose size is dynamically increased as required.
Hashtable	Represents a collection of key/value pairs that are organized based on the hash code of the key.
Queue	      Represents a first in, first out (FIFO) collection of objects.
Stack 	Represents a last in, first out (LIFO) collection of objects.
The System.Collections.Specialized namespace provides specialized and strongly typed collection classes, such as string-only collections and linked-list and hybrid dictionaries.